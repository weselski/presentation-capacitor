{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["\nexport interface CapacitorPresentationPlugin {\n  open(options: OpenOptions): Promise<OpenResponse>;\n  sendMessage<T>(message: T): Promise<T>;\n  terminate(): Promise<void>;\n\n  /**\n   *\n   * @param eventName\n   * @param listenerFunc <br>\n   *\n   * Works only if type html of url or if browser\n   */\n  addListener(\n    eventName: 'onSuccessLoadUrl',\n    listenerFunc: (data: any) => void,\n  ): any;\n  addListener(\n    eventName: 'onFailLoadUrl',\n    listenerFunc: (data: any) => void,\n  ): any;\n\n  \n  addListener(\n    eventName: 'onMessage',\n    listenerFunc: (data: any) => void,\n  ): any;\n\n  getDisplays(): Promise<{ displays: number }>;\n}\n\nexport type OpenOptions = {} & (\n  | {\n      type: 'url';\n      url: string;\n    }\n  | {\n      type: 'video';\n      videoOptions: {\n        videoUrl: string;\n        showControls?: boolean;\n      };\n    }\n  | {\n      type: 'html';\n      html: string;\n    }\n);\n\nexport type OpenResponse = { success?: any; error?: any; result?: any };\n"]}